var Asker = require('../lib/asker'),
    assert = require('chai').assert;

module.exports = {
    '#getUrl() should returns requested URL built from host, port and path options' : function() {
        var HOST = 'yandex.com',
            PORT = '443',
            PATH = '/search',
            request = new Asker({
                host : HOST,
                port : PORT,
                path : PATH
            });

        assert.strictEqual(request.getUrl(), HOST + ':' + PORT + PATH,
            'url generated by Asker#getUrl is correct');
    },

    '#done() should call callback if passed to constructor' : function(done) {
        var ERROR = new Error('error'),
            RESPONSE = 'ok',

            request = new Asker({}, function(error, response) {
                assert.strictEqual(error, ERROR,
                    'error argument passed to callback');

                assert.strictEqual(response, RESPONSE,
                    'error argument passed to callback');

                done();
            });

        request.done(ERROR, RESPONSE);
    },

    '#done() should not trying to call undefined callback' : function() {
        var request = new Asker();

        assert.doesNotThrow(function() {
            request.done();
        });
    },

    '#done() should set #_isRunning flag to false' : function() {
        var request = new Asker();

        request._isRunning = true;

        assert.strictEqual(request._isRunning, true,
            '_isRunning was set to true manually');

        request.done();

        assert.strictEqual(request._isRunning, false,
            '_isRunning was set to false by #done() call');
    }
};
